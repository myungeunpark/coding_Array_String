// Shuffle an Array 
// https://leetcode.com/problems/shuffle-an-array/submissions/

class Solution {

    int [] origin = null;
    
    public Solution(int[] nums) {
        
        origin = nums;
    }
    
    /** Resets the array to its original configuration and return it. */
    public int[] reset() {
                
        return origin;
    }
    
    /** Returns a random shuffling of the array. */
    public int[] shuffle1() {
        
        int [] ret = new int[origin.length];
        // copy array
        List <Integer> list = new ArrayList<>();
        for(int i=0; i< origin.length; i++){
            list.add(origin[i]);
        }
        
        Random rand = new Random();
        
        int inx = 0;        
        while(inx < origin.length){
        
            int del = rand.nextInt(list.size());
            ret[inx++] = list.get(del);
                
            list.remove(del);        
        }
        
        return ret;
    }
    
    public int[] shuffle2() {
        
        int [] ret = new int[origin.length];
        ret = origin.clone();
        Random rand = new Random();
        
        for(int i=0; i<ret.length; i++){
            
            int j = rand.nextInt(ret.length-i) + i;
            swap(ret, i, j);
        }
        return ret;
    }
    
    private void swap(int [] nums, int i, int j){
        
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int[] param_1 = obj.reset();
 * int[] param_2 = obj.shuffle();
 */
