// Check if two Strings are anagram
LeetCode
  - https://leetcode.com/problems/valid-anagram/
  - https://leetcode.com/problems/find-all-anagrams-in-a-string/
  - https://leetcode.com/problems/group-anagrams

// [1] Using extra count array 
// Time Complexity : O(N)
// Space Complexity : O(1)
//--------------------------------------------------
fun isAnagram2(str1 : String, str2: String) : Boolean {
    
    if(str1.length != str2.length)
    	return false
	
    var count = IntArray(26){0}
    
    val str1Sort : CharArray = str1.toCharArray()     
    val str2Sort : CharArray = str2.toCharArray()
    
    for(i in str1Sort.indices){
    	
        count[(str1Sort[i]-'a')]++
        count[(str2Sort[i]-'a')]--
        
    }
    
    for(i in str1Sort.indices){
        if(count[i] != 0)
        	return false
    }
    
    return true
          
}
//----------------------------------------------
// java
class Solution {
    public boolean isAnagram(String s, String t) {
        
        if(s.length() != t.length())
            return false;
        
        int [] count = new int [26];
        Arrays.fill(count, 0);
        
        
        for(int i=0; i<s.length(); i++){
            count[s.charAt(i) - 'a']++;
        }
        
        for(int i=0; i<t.length(); i++){
            count[t.charAt(i) - 'a']--;
        }
        
        for(int i=0; i<26; i++){
            
            if(count[i] != 0)
                return false;
        }
        
       return true;
    }
}


// Using sort --> compare
// Time Complexity : O(N * logN)
// Space Complexity : O(1)
//----------------------------------------------------
fun isAnagram(str1 : String, str2: String) : Boolean {
    
    if(str1.length != str2.length)
    	return false
	
    val str1Sort : CharArray = str1.toCharArray()     
    val str2Sort : CharArray = str2.toCharArray()
    
    str1Sort.sort()
    str2Sort.sort()
    return str1Sort.contentEquals(str2Sort)
          
}
//---------------------------------------------------
// Java
class Solution {
    public boolean isAnagram(String s, String t) {
        
        
        char [] sArr = s.toCharArray();
        char [] tArr = t.toCharArray();
        
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        
        return Arrays.equals(sArr, tArr);
       
    }
}
