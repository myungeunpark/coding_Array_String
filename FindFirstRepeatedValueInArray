# Find First repeated value in array
[1] 2 Loop  
   : Time - O(N*N)
[2] Using hash set
   : Time - O(N), space - O(N)
//--------------------------------------------
[JAVA]
public class FindFirstRepeatedNumber {

	public int firstRepeated(int [] nums){
		
		HashSet<Integer> set = new HashSet<>();
		int min = Integer.MAX_VALUE;
		for(int i=nums.length-1; i>=0; i--) {
						
			int key = nums[i];
			if(set.contains(key))
				min = Math.min(i, min);
			else
				set.add(key);
		}
		
		if(min == Integer.MAX_VALUE)
			return -1;
		else
			return nums[min];
	}
}
//------------------------------------------------
[KOTLIN]

fun findFirstRepeasted(nums : IntArray) : Int {
    
    var hash = HashSet<Int>()
    var min = Int.MAX_VALUE
    for(i in nums.size-1 downTo 0){
        
        val key = nums[i]
        if(hash.contains(key))
           min = Math.min(i, min) 	
        else
        	hash.add(key)        	
    }
    if(min == Int.MAX_VALUE)
    	return -1
    else
    	return nums[min]
}
//----------------------------------------------------
